================================================================================
MY_AWESOME_PLUGIN                                            *my_awesome_plugin*

This is a template for a plugin. It is meant to be copied and modified. The
following code is a simple example to show how to use this template and how to
take advantage of code documentation to generate plugin documentation.

This simple example plugin provides a command to calculate the maximum or
minimum of two numbers. Moreover, the result can be rounded if specified by the
user in its configuration using the setup function.

`:PluginName {number} {number} {max|min}`

The plugin can be configured using the |my_awesome_plugin.setup()| function.


PluginNameModule                                            *PluginNameModule*


    Fields: ~
        {setup} (function)  setup the plugin
        {main}  (function)  calculate the max or min of two numbers and round
                            the result if specified by options


my_awesome_plugin.setup({options})                 *my_awesome_plugin.setup()*
    Setup the plugin

    Defaults: ~
    {
      round = true
    }

    Parameters: ~
        {options} (Config)  config table


my_awesome_plugin.print({a}, {b}, {func}, {result}) *my_awesome_plugin.print()*
    Print the result of the comparison


    Parameters: ~
        {a}      (number)  first number
        {b}      (number)  second number
        {func}   (string)  "max" or "min"
        {result} (number)  result


my_awesome_plugin.main({a}, {b}, {func})            *my_awesome_plugin.main()*
    Calcululate the max or min of two numbers and round the result if specified
    by options


    Parameters: ~
        {a}    (number)  first number
        {b}    (number)  second number
        {func} (string)  "max" or "min"

    Return: ~
        number: result



================================================================================
MathModule                                                        *MathModule*


    Fields: ~
        {max} (function)  Will return the bigger number
        {min} (function)  Will return the smaller number


M.max({a}, {b})                                                      *M.max()*
    Will return the bigger number


    Parameters: ~
        {a} (number)  first number
        {b} (number)  second number

    Return: ~
        number: bigger number

    See: ~
        |M.min()|


M.min({a}, {b})                                                      *M.min()*
    Will return the smaller number


    Parameters: ~
        {a} (number)  first number
        {b} (number)  second number

    Return: ~
        number: smaller number

    See: ~
        |M.max()|


M.round({num})                                                     *M.round()*
    Will round a float number to the nearest integer


    Parameters: ~
        {num} (number)  float number

    Return: ~
        number: rounded num

    See: ~
        |math.floor()|
        |math.ceil()|



================================================================================
ConfigModule                                                    *ConfigModule*


    Fields: ~
        {defaults} (Config)  default options
        {options}  (Config)  config table extending defaults


Config                                                                *Config*


    Fields: ~
        {round} (boolean)  round the result after calculation



 vim:tw=78:ts=8:ft=help:norl:
